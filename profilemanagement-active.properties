spring.application.name=profilemanagement
server.port=8083

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/profile_management
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.metadataMap.instanceId=${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}

eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}

eureka.client.registry-fetch-interval-seconds=5
eureka.client.service-url.defaultZone=http://localhost:8081/eureka
spring.cloud.service-registry.auto-registration.enabled=true
eureka.client.enabled=true
eureka.client.service-url.registerWithEureka=true
